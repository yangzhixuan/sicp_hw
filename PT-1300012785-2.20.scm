(define (same-parity x . rest)
  (define (filter pred l)
    (if (null? l)
      '()
      (if (pred (car l))
        (cons (car l) (filter pred (cdr l)))
        (filter pred (cdr l)))))
  (filter (lambda (t) (= (remainder x 2) (remainder t 2))) 
          (cons x rest)))
